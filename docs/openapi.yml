openapi: 3.0.3
info:
  title: BookStat Server API
  description: |-
  version: 0.2.2

servers:
  # - url: https://team-dev-backend-api-c9.fly.dev/
tags:
  - name: user
  - name: book
  - name: review
  - name: tags
  - name: rating


paths:

  /users/register:
    post:
      tags:
        - user
      summary: Create user
      description: Create new user
      operationId: createUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUser'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unable to create new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      tags:
        - user
      summary: Get all users by first name if provided
      description: ''
      operationId: getAllUsers
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: query
          description: Search all users by first and last name if provided (separated by '%20')
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
        '401':
          description: Invalid token
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
      post:
        tags:
          - user
        summary: Localhost Login
        description: ''
        operationId: loginUser
        requestBody:
          description: User login information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/loginRes'

          '400':
            description: Invalid username/password supplied

  /books:
    post:
      tags:
        - book
      summary: Create Book
      description: Create a new book
      operationId: createBook
      requestBody:
         description: Book details
         content:
           application/json:
             schema:
             $ref: '#/components/schemas/newbook'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
        '400':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unable to create new book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /books/{bookId}:
    get:
      tags:
        - book
      summary: Get a book
      description: Get a book by it's Id
      operationId: getBookByID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
        '404':
          description: Book Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - book
      summary: Delete a book
      description: Delete a book by it's Id
      operationId: deleteBookByID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
        '404':
          description: Book Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'       

  /tags/{tagId}:
    get:
      tags:
        - tag
      summary: Get a tag
      description: Get a tag by it's Id
      operationId: getTagByID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
        '404':
          description: Tag Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - tag
      summary: Delete a tag
      description: Delete a tag by it's Id
      operationId: deleteTagByID
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag'
        '404':
          description: Tag Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                
         

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            error:
              type: string

    book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        authorFirstName:
          type: string
        authorLastName:
          type: integer
        coverUrl:
          type: string
        numPages:
          type: integer
        publisher:
          type: string
        yearPublished:
          type: integer
        ReadStatus:
          type: string
        createdAt:
          type: string
          format: string
        updatedAt:
          type: string
          format: string
      required:
        - title

    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string
        cohortId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        githubUrl:
          type: string

    CreatedUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        bio:
          type: string
        githubUrl:
          type: string
        password:
          type: string

    UpdateUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        cohortId:
          type: integer
        role:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        githubUrl:
          type: string

    AllUsers:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/User'

    CreateProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        githubUrl:
          type: string
      required:
        - firstName
        - lastName

    login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    loginRes:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            token:
              type: string
            user:
              properties:
                id:
                  type: integer
                email:
                  type: string
                cohortId:
                  type: integer
                role:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                bio:
                  type: string
                githubUrl:
                  type: string
    
    tag:
      type: object
      properties:
          id:
            type: integer
          tag:
            type: string        